{"ast":null,"code":"var _jsxFileName = \"D:\\\\ClientProjects\\\\reactwebrtc\\\\App\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport WebSocketClient from \"reconnecting-websocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst host = \"192.168.18.148:3000\";\nconst id = \"_\" + Math.random().toString(36).substr(2, 9);\nlet remoteId = null;\nlet connection = null;\nnavigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\nconst App = () => {\n  _s();\n\n  const room = \"121212\";\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const userVideo = useRef(null);\n  const partnerVideo = useRef(null); // useLayoutEffect(() => {\n  //   navigation.setOptions({headerTitle: `Room ${room}`});\n  // });\n\n  useEffect(() => {\n    const ws = new WebSocketClient(`ws://${host}`);\n\n    ws.onopen = () => {\n      console.log(\"Connected\");\n    };\n\n    ws.onerror = err => {\n      console.log(\"Got error:\", err);\n    };\n\n    ws.onmessage = async message => {\n      console.log(\"Got message:\", message);\n      const data = JSON.parse(message.data);\n\n      switch (data.type) {\n        case \"enter\":\n          await onEnter(data.success, data.full, data.wait);\n          break;\n\n        case \"offer\":\n          await onOffer(data.offer, data.remoteId);\n          break;\n\n        case \"answer\":\n          await onAnswer(data.answer);\n          break;\n\n        case \"candidate\":\n          await onCandidate(data.candidate);\n          break;\n\n        case \"leave\":\n          await onLeave();\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    const send = message => {\n      message.room = room;\n\n      if (remoteId) {\n        message.remoteId = remoteId;\n      }\n\n      message.id = id;\n      ws.send(JSON.stringify(message));\n    };\n\n    const onEnter = async (success, full, wait) => {\n      if (success) {\n        if (wait) {\n          startConnection();\n        } else {\n          startConnection(true);\n        }\n      } else {\n        startConnection();\n\n        if (full) {//TODO: full\n        } else {//TODO:\n          }\n      }\n    };\n\n    const startConnection = async (startPC = false) => {\n      console.log(\"STRA\");\n\n      if (navigator.getUserMedia) {\n        const isFront = true;\n        const facingMode = isFront ? \"user\" : \"environment\";\n        const constraints = {\n          audio: true,\n          video: {\n            mandatory: {\n              minWidth: 500,\n              // Provide your own width, height and frame rate here\n              minHeight: 300,\n              minFrameRate: 30\n            },\n            facingMode\n          }\n        };\n        await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: true,\n          facingMode\n        }, async stream => {\n          console.log(stream, \"STREAM\");\n          setLocalStream(stream);\n          userVideo.current.srcObject = stream;\n          await setupPeerConnection(stream, startPC);\n        }, err => {\n          console.log(err);\n        });\n      }\n    };\n\n    const setupPeerConnection = async (stream, startPC = false) => {\n      console.log(\"WORK\");\n      const configuration = {\n        iceServers: [{\n          urls: \"stun:stun.l.google.com:19302\"\n        }]\n      };\n      const conn = new window.RTCPeerConnection(configuration);\n      connection = conn;\n      console.log(conn, \"CONN\");\n      conn.addStream(stream);\n\n      conn.onaddstream = event => {\n        if (event.stream) {\n          partnerVideo.current.srcObject = event.stream;\n          setRemoteStream(event.stream);\n        }\n      };\n\n      conn.onicecandidate = event => {\n        if (event.candidate) {\n          send({\n            type: \"candidate\",\n            candidate: event.candidate\n          });\n        }\n      };\n\n      if (startPC) {\n        await startPeerConnection();\n      }\n    };\n\n    const startPeerConnection = async () => {\n      try {\n        const offer = await connection.createOffer();\n        send({\n          type: \"offer\",\n          offer\n        });\n        await connection.setLocalDescription(offer);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const onOffer = async (offer, remote) => {\n      remoteId = remote;\n      await connection.setRemoteDescription(new window.RTCSessionDescription(offer));\n\n      try {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        send({\n          type: \"answer\",\n          answer\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const onAnswer = async (answer) => await connection.setRemoteDescription(new window.RTCSessionDescription(answer));\n\n    const onCandidate = async (candidate) => await connection.addIceCandidate(new window.RTCIceCandidate(candidate));\n\n    const onLeave = async () => {\n      remoteId = null;\n      setRemoteStream(null);\n      partnerVideo.current = \"\";\n      connection.close();\n      connection.onaddstream = null;\n      connection.onicecandidate = null;\n      startConnection();\n    };\n\n    if (room.length > 0) {\n      send({\n        type: \"enter\",\n        id\n      });\n    } else {// Error\n    }\n\n    const unsubscribe = () => {\n      connection.close();\n      connection.onaddstream = null;\n      connection.onicecandidate = null;\n      send({\n        type: \"leave\"\n      });\n    }; // return unsubscribe;\n\n  }, [room]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: userVideo,\n        autoPlay: true,\n        muted: \"muted\",\n        style: {\n          background: \"lightgray\",\n          // width: \"100%\",\n          // borderRadius: 25,\n          transform: \"rotateY(180deg)\" // -webkitTransform: 'rotateY(180deg)'\n          // -moz-transform: 'rotateY(180deg)'\n\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          background: \"lightgray\",\n          // width: \"100%\",\n          // borderRadius: 25,\n          transform: \"rotateY(180deg)\" // -webkitTransform: 'rotateY(180deg)'\n          // -moz-transform: 'rotateY(180deg)'\n\n        },\n        ref: partnerVideo,\n        autoPlay: true,\n        className: \"videoElement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}; // function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n\n_s(App, \"C87SziLoMFW7O9pVsaoXPkntzl0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/ClientProjects/reactwebrtc/App/src/App.js"],"names":["React","useState","useEffect","useCallback","useRef","WebSocketClient","host","id","Math","random","toString","substr","remoteId","connection","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","App","room","localStream","setLocalStream","remoteStream","setRemoteStream","userVideo","partnerVideo","ws","onopen","console","log","onerror","err","onmessage","message","data","JSON","parse","type","onEnter","success","full","wait","onOffer","offer","onAnswer","answer","onCandidate","candidate","onLeave","send","stringify","startConnection","startPC","isFront","facingMode","constraints","audio","video","mandatory","minWidth","minHeight","minFrameRate","mediaDevices","stream","current","srcObject","setupPeerConnection","configuration","iceServers","urls","conn","window","RTCPeerConnection","addStream","onaddstream","event","onicecandidate","startPeerConnection","createOffer","setLocalDescription","error","remote","setRemoteDescription","RTCSessionDescription","createAnswer","addIceCandidate","RTCIceCandidate","close","length","unsubscribe","background","transform"],"mappings":"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","sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport WebSocketClient from \"reconnecting-websocket\";\n\nconst host = \"192.168.18.148:3000\";\nconst id = \"_\" + Math.random().toString(36).substr(2, 9);\nlet remoteId = null;\nlet connection = null;\nnavigator.getUserMedia =\n  navigator.getUserMedia ||\n  navigator.webkitGetUserMedia ||\n  navigator.mozGetUserMedia;\nconst App = () => {\n  const room = \"121212\";\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const userVideo = useRef(null);\n  const partnerVideo = useRef(null);\n  // useLayoutEffect(() => {\n  //   navigation.setOptions({headerTitle: `Room ${room}`});\n  // });\n\n  useEffect(() => {\n    const ws = new WebSocketClient(`ws://${host}`);\n\n    ws.onopen = () => {\n      console.log(\"Connected\");\n    };\n\n    ws.onerror = (err) => {\n      console.log(\"Got error:\", err);\n    };\n\n    ws.onmessage = async (message) => {\n      console.log(\"Got message:\", message);\n      const data = JSON.parse(message.data);\n      switch (data.type) {\n        case \"enter\":\n          await onEnter(data.success, data.full, data.wait);\n          break;\n        case \"offer\":\n          await onOffer(data.offer, data.remoteId);\n          break;\n        case \"answer\":\n          await onAnswer(data.answer);\n          break;\n        case \"candidate\":\n          await onCandidate(data.candidate);\n          break;\n        case \"leave\":\n          await onLeave();\n          break;\n        default:\n          break;\n      }\n    };\n\n    const send = (message) => {\n      message.room = room;\n      if (remoteId) {\n        message.remoteId = remoteId;\n      }\n      message.id = id;\n      ws.send(JSON.stringify(message));\n    };\n\n    const onEnter = async (success, full, wait) => {\n      if (success) {\n        if (wait) {\n          startConnection();\n        } else {\n          startConnection(true);\n        }\n      } else {\n        startConnection();\n        if (full) {\n          //TODO: full\n        } else {\n          //TODO:\n        }\n      }\n    };\n\n    const startConnection = async (startPC = false) => {\n      console.log(\"STRA\");\n      if (navigator.getUserMedia) {\n        const isFront = true;\n\n        const facingMode = isFront ? \"user\" : \"environment\";\n        const constraints = {\n          audio: true,\n          video: {\n            mandatory: {\n              minWidth: 500, // Provide your own width, height and frame rate here\n              minHeight: 300,\n              minFrameRate: 30,\n            },\n            facingMode,\n          },\n        };\n        await navigator.mediaDevices.getUserMedia(\n          {\n            audio: true,\n            video: true,\n            facingMode,\n          },\n          async (stream) => {\n            console.log(stream, \"STREAM\");\n            setLocalStream(stream);\n            userVideo.current.srcObject = stream;\n            await setupPeerConnection(stream, startPC);\n          },\n          (err) => {\n            console.log(err);\n          }\n        );\n      }\n    };\n    const setupPeerConnection = async (stream, startPC = false) => {\n      console.log(\"WORK\");\n      const configuration = {\n        iceServers: [\n          {\n            urls: \"stun:stun.l.google.com:19302\",\n          },\n        ],\n      };\n      const conn = new window.RTCPeerConnection(configuration);\n      connection = conn;\n      console.log(conn, \"CONN\");\n      conn.addStream(stream);\n      conn.onaddstream = (event) => {\n        if (event.stream) {\n          partnerVideo.current.srcObject = event.stream;\n          setRemoteStream(event.stream);\n        }\n      };\n\n      conn.onicecandidate = (event) => {\n        if (event.candidate) {\n          send({\n            type: \"candidate\",\n            candidate: event.candidate,\n          });\n        }\n      };\n\n      if (startPC) {\n        await startPeerConnection();\n      }\n    };\n\n    const startPeerConnection = async () => {\n      try {\n        const offer = await connection.createOffer();\n        send({\n          type: \"offer\",\n          offer,\n        });\n        await connection.setLocalDescription(offer);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const onOffer = async (offer, remote) => {\n      remoteId = remote;\n      await connection.setRemoteDescription(\n        new window.RTCSessionDescription(offer)\n      );\n\n      try {\n        const answer = await connection.createAnswer();\n        await connection.setLocalDescription(answer);\n        send({\n          type: \"answer\",\n          answer,\n        });\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const onAnswer = async (answer) =>\n      await connection.setRemoteDescription(\n        new window.RTCSessionDescription(answer)\n      );\n\n    const onCandidate = async (candidate) =>\n      await connection.addIceCandidate(new window.RTCIceCandidate(candidate));\n\n    const onLeave = async () => {\n      remoteId = null;\n      setRemoteStream(null);\n      partnerVideo.current = \"\";\n      connection.close();\n      connection.onaddstream = null;\n      connection.onicecandidate = null;\n      startConnection();\n    };\n\n    if (room.length > 0) {\n      send({\n        type: \"enter\",\n        id,\n      });\n    } else {\n      // Error\n    }\n\n    const unsubscribe = () => {\n      connection.close();\n      connection.onaddstream = null;\n      connection.onicecandidate = null;\n      send({\n        type: \"leave\",\n      });\n    };\n    // return unsubscribe;\n  }, [room]);\n\n  return (\n    <div className=\"app\">\n      <header className=\"App-header\">\n        <video\n          ref={userVideo}\n          autoPlay\n          muted=\"muted\"\n          style={{\n            background: \"lightgray\",\n            // width: \"100%\",\n            // borderRadius: 25,\n            transform: \"rotateY(180deg)\",\n            // -webkitTransform: 'rotateY(180deg)'\n            // -moz-transform: 'rotateY(180deg)'\n          }}\n        />\n        <video\n          style={{\n            background: \"lightgray\",\n            // width: \"100%\",\n            // borderRadius: 25,\n            transform: \"rotateY(180deg)\",\n            // -webkitTransform: 'rotateY(180deg)'\n            // -moz-transform: 'rotateY(180deg)'\n          }}\n          ref={partnerVideo}\n          autoPlay\n          className=\"videoElement\"\n        />\n      </header>\n    </div>\n  );\n};\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}